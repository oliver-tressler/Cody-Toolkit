{
	"name": "cody-toolkit-proxygenerator",
	"author": {
		"name": "Oliver Tressler",
		"email": "oliver.tressler@protonmail.com"
	},
	"repository": {
		"url": "https://github.com/otressler/cody-toolkit.git",
		"type": "github"
	},
	"publisher": "otressler",
	"icon": "assets/d365-icon.png",
	"license": "GPLv3",
	"displayName": "Cody Toolkit (Proxy Generator)",
	"description": "Create proxy classes for Dynamics CRM 2016 On-Premise Entities",
	"version": "1.0.2",
	"engines": {
		"vscode": "^1.53.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:cody.toolkit.proxyGenerator.ts.generateEntityProxies",
		"onCommand:cody.toolkit.proxyGenerator.ts.generateActionProxies",
		"onCommand:cody.toolkit.proxyGenerator.ts.regenerateAllEntityProxies",
		"onCommand:cody.toolkit.proxyGenerator.ts.regenerateAllActionProxies"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "cody.toolkit.proxyGenerator.ts.generateEntityProxies",
				"title": "Generate TypeScript Entity Proxies",
				"category": "Cody Proxy Generator"
			},
			{
				"command": "cody.toolkit.proxyGenerator.ts.generateActionProxies",
				"title": "Generate TypeScript Action Proxies",
				"category": "Cody Proxy Generator"
			},
			{
				"command": "cody.toolkit.proxyGenerator.ts.regenerateAllEntityProxies",
				"title": "Regenerate all TypeScript Entity Proxies",
				"category": "Cody Proxy Generator"
			},
			{
				"command": "cody.toolkit.proxyGenerator.ts.regenerateAllActionProxies",
				"title": "Regenerate all TypeScript Action Proxies",
				"category": "Cody Proxy Generator"
			},
			{
				"command": "cody.toolkit.proxyGenerator.cs.generateEntityProxies",
				"title": "Generate C# Entity Proxies",
				"category": "Cody Proxy Generator"
			},
			{
				"command": "cody.toolkit.proxyGenerator.cs.generateActionProxies",
				"title": "Generate C# Action Proxies",
				"category": "Cody Proxy Generator"
			},
			{
				"command": "cody.toolkit.proxyGenerator.cs.regenerateAllEntityProxies",
				"title": "Regenerate all C# Entity Proxies",
				"category": "Cody Proxy Generator"
			},
			{
				"command": "cody.toolkit.proxyGenerator.cs.regenerateAllActionProxies",
				"title": "Regenerate all C# Action Proxies",
				"category": "Cody Proxy Generator"
			}
		],
		"configuration": {
			"title": "Cody Toolkit (Proxy Generator)",
			"properties": {
				"cody.toolkit.proxyGenerator.selectionMode": {
					"description": "Use either quickpick or freetext mode to specify which entity to generate. Use freetext if the server request to get available entities is too slow.",
					"type": "string",
					"enum": [
						"Freetext",
						"QuickPick"
					],
					"scope": "window",
					"default": "QuickPick"
				},
				"cody.toolkit.proxyGenerator.ts.proxyFolder": {
					"description": "Path to the folder containing the Typescript Proxies",
					"type": "string",
					"scope": "window",
					"title": "TS Proxy Folder"
				},
				"cody.toolkit.proxyGenerator.ts.globalEnums": {
					"markdownDescription": "If Global Enum generation is active, separate enum files will be generated and placed in a shared `OptionSets` folder within your proxy folder. While different enums are comparable in typescript, this provides the ability to choose more lightweight imports when you only need named option set values and not the full proxy.",
					"type": "boolean",
					"scope": "window"
				},
				"cody.toolkit.proxyGenerator.ts.restartTsLanguageServerWhenCreatingNewFiles": {
					"markdownDescription": "If `tsconfig.json` includes path configurations, the Typescript Language Server sometimes struggles with recognizing imports when new files are added. By enabling this, all TypeScript Proxy Generation actions will check if new files have been generated and restart the server automatically. **This only works if a typescript file is opened in the active editor.**",
					"type": "boolean",
					"scope": "window",
					"default": false
				},
				"cody.toolkit.proxyGenerator.cs.proxyFolder": {
					"description": "Path to the folder containing the Typescript Proxies",
					"type": "string",
					"scope": "window",
					"title": "TS Proxy Folder"
				},
				"cody.toolkit.proxyGenerator.cs.namespace": {
					"description": "Choose the namespace that generated proxy classes will have",
					"type": "string",
					"scope": "window",
					"title": "TS Proxy Folder",
					"default": "Crm.Proxies.ProxyClasses"
				},
				"cody.toolkit.proxyGenerator.cs.globalEnums": {
					"markdownDescription": "If Global Enum generation is active, separate enum files will be generated and placed in a shared `OptionSets` folder within your proxy folder. This will make those enums unaccessible through the class.",
					"type": "boolean",
					"scope": "window"
				},
				"cody.toolkit.proxyGenerator.cs.proxyLayout": {
					"markdownDescription": "Choose the way proxies should be generated.",
					"type": "string",
					"enum": [
						"XrmToolkit",
						"CrmSvcUtil"
					],
					"scope": "window",
					"default": "XrmToolkit"
				}
			}
		}
	},
	"extensionDependencies": [
		"otressler.cody-toolkit-core"
	],
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"webpack": "webpack --mode development",
		"webpack-dev": "webpack --mode development --watch",
		"test-compile": "tsc -p ./"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.53.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"ts-loader": "^8.0.14",
		"typescript": "^4.1.3",
		"webpack": "^5.19.0",
		"webpack-cli": "^4.4.0"
	},
	"dependencies": {
		"axios": "^0.21.1"
	}
}
